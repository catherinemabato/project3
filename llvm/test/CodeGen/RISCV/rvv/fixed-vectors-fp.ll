; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: sed 's/TY/half/g;s/N/8/g' %s | llc -mtriple=riscv32 -mattr=+v,+zvfh -verify-machineinstrs | FileCheck %s --check-prefix=V8F16ZVFH
; RUN: sed 's/TY/half/g;s/N/8/g' %s | llc -mtriple=riscv64 -mattr=+v,+zvfh -verify-machineinstrs | FileCheck %s --check-prefix=V8F16ZVFH

; RUN: sed 's/TY/half/g;s/N/8/g' %s | llc -mtriple=riscv32 -mattr=+v,+zvfhmin -verify-machineinstrs | FileCheck %s --check-prefix=V8F16ZVFHMIN
; RUN: sed 's/TY/half/g;s/N/8/g' %s | llc -mtriple=riscv64 -mattr=+v,+zvfhmin -verify-machineinstrs | FileCheck %s --check-prefix=V8F16ZVFHMIN

; RUN: sed 's/TY/half/g;s/N/6/g' %s | llc -mtriple=riscv32 -mattr=+v,+zvfh -verify-machineinstrs | FileCheck %s --check-prefix=V6F16ZVFH
; RUN: sed 's/TY/half/g;s/N/6/g' %s | llc -mtriple=riscv64 -mattr=+v,+zvfh -verify-machineinstrs | FileCheck %s --check-prefix=V6F16ZVFH

; RUN: sed 's/TY/half/g;s/N/6/g' %s | llc -mtriple=riscv32 -mattr=+v,+zvfhmin -verify-machineinstrs | FileCheck %s --check-prefix=V6F16ZVFHMIN
; RUN: sed 's/TY/half/g;s/N/6/g' %s | llc -mtriple=riscv64 -mattr=+v,+zvfhmin -verify-machineinstrs | FileCheck %s --check-prefix=V6F16ZVFHMIN

; RUN: sed 's/TY/float/g;s/N/4/g' %s | llc -mtriple=riscv32 -mattr=+v -verify-machineinstrs | FileCheck %s --check-prefix=V4F32
; RUN: sed 's/TY/float/g;s/N/4/g' %s | llc -mtriple=riscv64 -mattr=+v -verify-machineinstrs | FileCheck %s --check-prefix=V4F32

; RUN: sed 's/TY/float/g;s/N/6/g' %s | llc -mtriple=riscv32 -mattr=+v -verify-machineinstrs | FileCheck %s --check-prefix=V6F32
; RUN: sed 's/TY/float/g;s/N/6/g' %s | llc -mtriple=riscv64 -mattr=+v -verify-machineinstrs | FileCheck %s --check-prefix=V6F32

; RUN: sed 's/TY/double/g;s/N/2/g' %s | llc -mtriple=riscv32 -mattr=+v -verify-machineinstrs | FileCheck %s --check-prefix=V2F64
; RUN: sed 's/TY/double/g;s/N/2/g' %s | llc -mtriple=riscv64 -mattr=+v -verify-machineinstrs | FileCheck %s --check-prefix=V2F64

; RUN: sed 's/TY/double/g;s/N/3/g' %s | llc -mtriple=riscv32 -mattr=+v -verify-machineinstrs | FileCheck %s --check-prefix=V3F64
; RUN: sed 's/TY/double/g;s/N/3/g' %s | llc -mtriple=riscv64 -mattr=+v -verify-machineinstrs | FileCheck %s --check-prefix=V3F64

define <N x TY> @fadd_vv(<N x TY> %a, <N x TY> %b) {
; V8F16ZVFH-LABEL: fadd_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfadd.vv v8, v8, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fadd_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfadd.vv v10, v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fadd_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfadd.vv v8, v8, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fadd_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfadd.vv v10, v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fadd_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfadd.vv v8, v8, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fadd_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfadd.vv v8, v8, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fadd_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfadd.vv v8, v8, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fadd_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfadd.vv v8, v8, v10
; V3F64-NEXT:    ret
  %c = fadd <N x TY> %a, %b
  ret <N x TY> %c
}

define <N x TY> @fadd_vf(<N x TY> %a, TY %b) {
; V8F16ZVFH-LABEL: fadd_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfadd.vf v8, v8, fa0
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fadd_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfadd.vv v10, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fadd_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfadd.vf v8, v8, fa0
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fadd_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfadd.vv v10, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fadd_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfadd.vf v8, v8, fa0
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fadd_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfadd.vf v8, v8, fa0
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fadd_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfadd.vf v8, v8, fa0
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fadd_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfadd.vf v8, v8, fa0
; V3F64-NEXT:    ret
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %c = fadd <N x TY> %a, %b.splat
  ret <N x TY> %c
}

define <N x TY> @fadd_fv(<N x TY> %a, TY %b) {
; V8F16ZVFH-LABEL: fadd_fv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfadd.vf v8, v8, fa0
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fadd_fv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfadd.vv v10, v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fadd_fv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfadd.vf v8, v8, fa0
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fadd_fv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfadd.vv v10, v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fadd_fv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfadd.vf v8, v8, fa0
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fadd_fv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfadd.vf v8, v8, fa0
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fadd_fv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfadd.vf v8, v8, fa0
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fadd_fv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfadd.vf v8, v8, fa0
; V3F64-NEXT:    ret
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %c = fadd <N x TY> %b.splat, %a
  ret <N x TY> %c
}

define <N x TY> @fsub_vv(<N x TY> %a, <N x TY> %b) {
; V8F16ZVFH-LABEL: fsub_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfsub.vv v8, v8, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fsub_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fsub_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfsub.vv v8, v8, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fsub_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fsub_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfsub.vv v8, v8, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fsub_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfsub.vv v8, v8, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fsub_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfsub.vv v8, v8, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fsub_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfsub.vv v8, v8, v10
; V3F64-NEXT:    ret
  %c = fsub <N x TY> %a, %b
  ret <N x TY> %c
}

define <N x TY> @fsub_vf(<N x TY> %a, TY %b) {
; V8F16ZVFH-LABEL: fsub_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfsub.vf v8, v8, fa0
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fsub_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fsub_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfsub.vf v8, v8, fa0
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fsub_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fsub_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfsub.vf v8, v8, fa0
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fsub_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfsub.vf v8, v8, fa0
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fsub_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfsub.vf v8, v8, fa0
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fsub_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfsub.vf v8, v8, fa0
; V3F64-NEXT:    ret
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %c = fsub <N x TY> %a, %b.splat
  ret <N x TY> %c
}

define <N x TY> @fsub_fv(<N x TY> %a, TY %b) {
; V8F16ZVFH-LABEL: fsub_fv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfrsub.vf v8, v8, fa0
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fsub_fv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fsub_fv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfrsub.vf v8, v8, fa0
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fsub_fv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fsub_fv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfrsub.vf v8, v8, fa0
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fsub_fv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfrsub.vf v8, v8, fa0
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fsub_fv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfrsub.vf v8, v8, fa0
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fsub_fv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfrsub.vf v8, v8, fa0
; V3F64-NEXT:    ret
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %c = fsub <N x TY> %b.splat, %a
  ret <N x TY> %c
}

define <N x TY> @fmul_vv(<N x TY> %a, <N x TY> %b) {
; V8F16ZVFH-LABEL: fmul_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmul.vv v8, v8, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmul_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmul_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmul.vv v8, v8, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmul_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmul_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmul.vv v8, v8, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmul_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmul.vv v8, v8, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmul_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmul.vv v8, v8, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmul_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmul.vv v8, v8, v10
; V3F64-NEXT:    ret
  %c = fmul <N x TY> %a, %b
  ret <N x TY> %c
}

define <N x TY> @fmul_vf(<N x TY> %a, TY %b) {
; V8F16ZVFH-LABEL: fmul_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmul.vf v8, v8, fa0
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmul_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmul_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmul.vf v8, v8, fa0
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmul_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmul_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmul.vf v8, v8, fa0
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmul_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmul.vf v8, v8, fa0
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmul_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmul.vf v8, v8, fa0
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmul_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmul.vf v8, v8, fa0
; V3F64-NEXT:    ret
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %c = fmul <N x TY> %a, %b.splat
  ret <N x TY> %c
}

define <N x TY> @fmul_fv(<N x TY> %a, TY %b) {
; V8F16ZVFH-LABEL: fmul_fv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmul.vf v8, v8, fa0
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmul_fv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmul_fv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmul.vf v8, v8, fa0
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmul_fv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmul_fv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmul.vf v8, v8, fa0
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmul_fv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmul.vf v8, v8, fa0
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmul_fv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmul.vf v8, v8, fa0
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmul_fv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmul.vf v8, v8, fa0
; V3F64-NEXT:    ret
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %c = fmul <N x TY> %b.splat, %a
  ret <N x TY> %c
}

define <N x TY> @fdiv_vv(<N x TY> %a, <N x TY> %b) {
; V8F16ZVFH-LABEL: fdiv_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfdiv.vv v8, v8, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fdiv_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfdiv.vv v10, v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fdiv_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfdiv.vv v8, v8, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fdiv_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfdiv.vv v10, v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fdiv_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfdiv.vv v8, v8, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fdiv_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfdiv.vv v8, v8, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fdiv_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfdiv.vv v8, v8, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fdiv_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfdiv.vv v8, v8, v10
; V3F64-NEXT:    ret
  %c = fdiv <N x TY> %a, %b
  ret <N x TY> %c
}

define <N x TY> @fdiv_vf(<N x TY> %a, TY %b) {
; V8F16ZVFH-LABEL: fdiv_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfdiv.vf v8, v8, fa0
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fdiv_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfdiv.vv v10, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fdiv_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfdiv.vf v8, v8, fa0
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fdiv_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfdiv.vv v10, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fdiv_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfdiv.vf v8, v8, fa0
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fdiv_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfdiv.vf v8, v8, fa0
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fdiv_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfdiv.vf v8, v8, fa0
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fdiv_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfdiv.vf v8, v8, fa0
; V3F64-NEXT:    ret
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %c = fdiv <N x TY> %a, %b.splat
  ret <N x TY> %c
}

define <N x TY> @fdiv_fv(<N x TY> %a, TY %b) {
; V8F16ZVFH-LABEL: fdiv_fv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfrdiv.vf v8, v8, fa0
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fdiv_fv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfdiv.vv v10, v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fdiv_fv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfrdiv.vf v8, v8, fa0
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fdiv_fv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfdiv.vv v10, v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fdiv_fv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfrdiv.vf v8, v8, fa0
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fdiv_fv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfrdiv.vf v8, v8, fa0
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fdiv_fv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfrdiv.vf v8, v8, fa0
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fdiv_fv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfrdiv.vf v8, v8, fa0
; V3F64-NEXT:    ret
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %c = fdiv <N x TY> %b.splat, %a
  ret <N x TY> %c
}

define <N x TY> @fneg(<N x TY> %a) {
; V8F16ZVFH-LABEL: fneg:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfneg.v v8, v8
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fneg:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    lui a0, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a0
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fneg:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfneg.v v8, v8
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fneg:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    lui a0, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a0
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fneg:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfneg.v v8, v8
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fneg:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfneg.v v8, v8
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fneg:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfneg.v v8, v8
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fneg:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfneg.v v8, v8
; V3F64-NEXT:    ret
  %b = fneg <N x TY> %a
  ret <N x TY> %b
}

define <N x TY> @fabs(<N x TY> %a) {
; V8F16ZVFH-LABEL: fabs:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfabs.v v8, v8
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fabs:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    lui a0, 8
; V8F16ZVFHMIN-NEXT:    addi a0, a0, -1
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vand.vx v8, v8, a0
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fabs:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfabs.v v8, v8
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fabs:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    lui a0, 8
; V6F16ZVFHMIN-NEXT:    addi a0, a0, -1
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vand.vx v8, v8, a0
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fabs:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfabs.v v8, v8
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fabs:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfabs.v v8, v8
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fabs:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfabs.v v8, v8
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fabs:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfabs.v v8, v8
; V3F64-NEXT:    ret
  %b = call <N x TY> @llvm.fabs(<N x TY> %a)
  ret <N x TY> %b
}

define <N x TY> @copysign_vv(<N x TY> %a, <N x TY> %b) {
; V8F16ZVFH-LABEL: copysign_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfsgnj.vv v8, v8, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: copysign_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    lui a0, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vand.vx v9, v9, a0
; V8F16ZVFHMIN-NEXT:    addi a0, a0, -1
; V8F16ZVFHMIN-NEXT:    vand.vx v8, v8, a0
; V8F16ZVFHMIN-NEXT:    vor.vv v8, v8, v9
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: copysign_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfsgnj.vv v8, v8, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: copysign_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    lui a0, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vand.vx v9, v9, a0
; V6F16ZVFHMIN-NEXT:    addi a0, a0, -1
; V6F16ZVFHMIN-NEXT:    vand.vx v8, v8, a0
; V6F16ZVFHMIN-NEXT:    vor.vv v8, v8, v9
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: copysign_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfsgnj.vv v8, v8, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: copysign_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfsgnj.vv v8, v8, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: copysign_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfsgnj.vv v8, v8, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: copysign_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfsgnj.vv v8, v8, v10
; V3F64-NEXT:    ret
  %c = call <N x TY> @llvm.copysign(<N x TY> %a, <N x TY> %b)
  ret <N x TY> %c
}

define <N x TY> @copysign_vf(<N x TY> %a, TY %b) {
; V8F16ZVFH-LABEL: copysign_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfsgnj.vf v8, v8, fa0
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: copysign_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V8F16ZVFHMIN-NEXT:    lui a0, 8
; V8F16ZVFHMIN-NEXT:    addi a1, a0, -1
; V8F16ZVFHMIN-NEXT:    vand.vx v8, v8, a1
; V8F16ZVFHMIN-NEXT:    vand.vx v9, v9, a0
; V8F16ZVFHMIN-NEXT:    vor.vv v8, v8, v9
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: copysign_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfsgnj.vf v8, v8, fa0
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: copysign_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v9, a0
; V6F16ZVFHMIN-NEXT:    lui a0, 8
; V6F16ZVFHMIN-NEXT:    addi a1, a0, -1
; V6F16ZVFHMIN-NEXT:    vand.vx v8, v8, a1
; V6F16ZVFHMIN-NEXT:    vand.vx v9, v9, a0
; V6F16ZVFHMIN-NEXT:    vor.vv v8, v8, v9
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: copysign_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfsgnj.vf v8, v8, fa0
; V4F32-NEXT:    ret
;
; V6F32-LABEL: copysign_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfsgnj.vf v8, v8, fa0
; V6F32-NEXT:    ret
;
; V2F64-LABEL: copysign_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfsgnj.vf v8, v8, fa0
; V2F64-NEXT:    ret
;
; V3F64-LABEL: copysign_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfsgnj.vf v8, v8, fa0
; V3F64-NEXT:    ret
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %c = call <N x TY> @llvm.copysign(<N x TY> %a, <N x TY> %b.splat)
  ret <N x TY> %c
}

define <N x TY> @copysign_neg(<N x TY> %a, <N x TY> %b) {
; V8F16ZVFH-LABEL: copysign_neg:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfsgnjn.vv v8, v8, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: copysign_neg:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    lui a0, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v9, v9, a0
; V8F16ZVFHMIN-NEXT:    vand.vx v9, v9, a0
; V8F16ZVFHMIN-NEXT:    addi a0, a0, -1
; V8F16ZVFHMIN-NEXT:    vand.vx v8, v8, a0
; V8F16ZVFHMIN-NEXT:    vor.vv v8, v8, v9
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: copysign_neg:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfsgnjn.vv v8, v8, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: copysign_neg:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    lui a0, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v9, v9, a0
; V6F16ZVFHMIN-NEXT:    vand.vx v9, v9, a0
; V6F16ZVFHMIN-NEXT:    addi a0, a0, -1
; V6F16ZVFHMIN-NEXT:    vand.vx v8, v8, a0
; V6F16ZVFHMIN-NEXT:    vor.vv v8, v8, v9
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: copysign_neg:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfsgnjn.vv v8, v8, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: copysign_neg:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfsgnjn.vv v8, v8, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: copysign_neg:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfsgnjn.vv v8, v8, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: copysign_neg:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfsgnjn.vv v8, v8, v10
; V3F64-NEXT:    ret
  %c = fneg <N x TY> %b
  %d = call <N x TY> @llvm.copysign(<N x TY> %a, <N x TY> %c)
  ret <N x TY> %d
}

define <N x TY> @sqrt(<N x TY> %a) {
; V8F16ZVFH-LABEL: sqrt:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfsqrt.v v8, v8
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: sqrt:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsqrt.v v10, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: sqrt:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfsqrt.v v8, v8
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: sqrt:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsqrt.v v10, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: sqrt:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfsqrt.v v8, v8
; V4F32-NEXT:    ret
;
; V6F32-LABEL: sqrt:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfsqrt.v v8, v8
; V6F32-NEXT:    ret
;
; V2F64-LABEL: sqrt:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfsqrt.v v8, v8
; V2F64-NEXT:    ret
;
; V3F64-LABEL: sqrt:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfsqrt.v v8, v8
; V3F64-NEXT:    ret
  %b = call <N x TY> @llvm.sqrt(<N x TY> %a)
  ret <N x TY> %b
}

define <N x TY> @vfmacc_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfmacc_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmacc.vv v8, v10, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfmacc_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v10, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfmacc_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmacc.vv v8, v10, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfmacc_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v10, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfmacc_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmacc.vv v8, v10, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfmacc_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmacc.vv v8, v12, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfmacc_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmacc.vv v8, v10, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfmacc_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmacc.vv v8, v12, v10
; V3F64-NEXT:    ret
  %d = call <N x TY> @llvm.fma(<N x TY> %c, <N x TY> %b, <N x TY> %a)
  ret <N x TY> %d
}

define <N x TY> @vfmacc_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfmacc_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmacc.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfmacc_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v16, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfmacc_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmacc.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfmacc_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v16, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfmacc_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmacc.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfmacc_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmacc.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfmacc_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmacc.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfmacc_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmacc.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fma(<N x TY> %c, <N x TY> %b.splat, <N x TY> %a)
  ret <N x TY> %d
}

define <N x TY> @vfnmacc_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfnmacc_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmacc.vv v8, v10, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfnmacc_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    lui a0, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a0
; V8F16ZVFHMIN-NEXT:    vxor.vx v10, v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v10, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfnmacc_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmacc.vv v8, v10, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfnmacc_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    lui a0, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a0
; V6F16ZVFHMIN-NEXT:    vxor.vx v10, v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v10, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfnmacc_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmacc.vv v8, v10, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfnmacc_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmacc.vv v8, v12, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfnmacc_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmacc.vv v8, v10, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfnmacc_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmacc.vv v8, v12, v10
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %c.neg = fneg <N x TY> %c
  %d = call <N x TY> @llvm.fma(<N x TY> %c.neg, <N x TY> %b, <N x TY> %a.neg)
  ret <N x TY> %d
}

define <N x TY> @vfnmacc_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfnmacc_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmacc.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfnmacc_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    lui a1, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a1
; V8F16ZVFHMIN-NEXT:    vxor.vx v9, v9, a1
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v16, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfnmacc_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmacc.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfnmacc_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    lui a1, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a1
; V6F16ZVFHMIN-NEXT:    vxor.vx v9, v9, a1
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v16, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfnmacc_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmacc.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfnmacc_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmacc.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfnmacc_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmacc.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfnmacc_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmacc.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %c.neg = fneg <N x TY> %c
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fma(<N x TY> %c.neg, <N x TY> %b.splat, <N x TY> %a.neg)
  ret <N x TY> %d
}

define <N x TY> @vfmsac_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfmsac_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmsac.vv v8, v10, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfmsac_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    lui a0, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v10, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfmsac_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmsac.vv v8, v10, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfmsac_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    lui a0, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v10, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfmsac_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmsac.vv v8, v10, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfmsac_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmsac.vv v8, v12, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfmsac_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmsac.vv v8, v10, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfmsac_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmsac.vv v8, v12, v10
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %d = call <N x TY> @llvm.fma(<N x TY> %c, <N x TY> %b, <N x TY> %a.neg)
  ret <N x TY> %d
}

define <N x TY> @vfmsac_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfmsac_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmsac.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfmsac_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    lui a1, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a1
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v16, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfmsac_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmsac.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfmsac_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    lui a1, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a1
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v16, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfmsac_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmsac.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfmsac_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmsac.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfmsac_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmsac.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfmsac_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmsac.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fma(<N x TY> %c, <N x TY> %b.splat, <N x TY> %a.neg)
  ret <N x TY> %d
}

define <N x TY> @vfnmsac_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfnmsac_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmsac.vv v8, v10, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfnmsac_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    lui a0, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v10, v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v14, v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v14
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfnmsac_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmsac.vv v8, v10, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfnmsac_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    lui a0, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v10, v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v14, v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v14
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfnmsac_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmsac.vv v8, v10, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfnmsac_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmsac.vv v8, v12, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfnmsac_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmsac.vv v8, v10, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfnmsac_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmsac.vv v8, v12, v10
; V3F64-NEXT:    ret
  %c.neg = fneg <N x TY> %c
  %d = call <N x TY> @llvm.fma(<N x TY> %c.neg, <N x TY> %b, <N x TY> %a)
  ret <N x TY> %d
}

define <N x TY> @vfnmsac_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfnmsac_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmsac.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfnmsac_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    lui a1, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v9, v9, a1
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v16, v12, v14
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfnmsac_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmsac.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfnmsac_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    lui a1, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v9, v9, a1
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v16, v12, v14
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfnmsac_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmsac.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfnmsac_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmsac.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfnmsac_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmsac.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfnmsac_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmsac.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %c.neg = fneg <N x TY> %c
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fma(<N x TY> %c.neg, <N x TY> %b.splat, <N x TY> %a)
  ret <N x TY> %d
}

define <N x TY> @vfmadd_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfmadd_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmadd.vv v8, v9, v10
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfmadd_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v14, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v14
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfmadd_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmadd.vv v8, v9, v10
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfmadd_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v14, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v14
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfmadd_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmadd.vv v8, v9, v10
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfmadd_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmadd.vv v8, v10, v12
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfmadd_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmadd.vv v8, v9, v10
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfmadd_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmadd.vv v8, v10, v12
; V3F64-NEXT:    ret
  %d = call <N x TY> @llvm.fma(<N x TY> %a, <N x TY> %b, <N x TY> %c)
  ret <N x TY> %d
}

define <N x TY> @vfmadd_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfmadd_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmadd.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfmadd_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v16, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfmadd_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmadd.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfmadd_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v16, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfmadd_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmadd.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfmadd_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmadd.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfmadd_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmadd.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfmadd_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmadd.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fma(<N x TY> %a, <N x TY> %b.splat, <N x TY> %c)
  ret <N x TY> %d
}

define <N x TY> @vfnmadd_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfnmadd_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmadd.vv v8, v9, v10
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfnmadd_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    lui a0, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a0
; V8F16ZVFHMIN-NEXT:    vxor.vx v10, v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v14, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v14
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfnmadd_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmadd.vv v8, v9, v10
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfnmadd_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    lui a0, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a0
; V6F16ZVFHMIN-NEXT:    vxor.vx v10, v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v14, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v14
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfnmadd_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmadd.vv v8, v9, v10
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfnmadd_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmadd.vv v8, v10, v12
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfnmadd_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmadd.vv v8, v9, v10
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfnmadd_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmadd.vv v8, v10, v12
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %c.neg = fneg <N x TY> %c
  %d = call <N x TY> @llvm.fma(<N x TY> %a.neg, <N x TY> %b, <N x TY> %c.neg)
  ret <N x TY> %d
}

define <N x TY> @vfnmadd_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfnmadd_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmadd.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfnmadd_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    lui a1, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a1
; V8F16ZVFHMIN-NEXT:    vxor.vx v9, v9, a1
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v16, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfnmadd_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmadd.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfnmadd_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    lui a1, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a1
; V6F16ZVFHMIN-NEXT:    vxor.vx v9, v9, a1
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v16, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfnmadd_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmadd.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfnmadd_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmadd.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfnmadd_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmadd.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfnmadd_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmadd.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %c.neg = fneg <N x TY> %c
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fma(<N x TY> %a.neg, <N x TY> %b.splat, <N x TY> %c.neg)
  ret <N x TY> %d
}

define <N x TY> @vfmsub_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfmsub_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmsub.vv v8, v9, v10
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfmsub_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    lui a0, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v10, v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v14, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v14
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfmsub_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmsub.vv v8, v9, v10
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfmsub_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    lui a0, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v10, v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v14, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v14
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfmsub_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmsub.vv v8, v9, v10
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfmsub_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmsub.vv v8, v10, v12
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfmsub_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmsub.vv v8, v9, v10
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfmsub_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmsub.vv v8, v10, v12
; V3F64-NEXT:    ret
  %c.neg = fneg <N x TY> %c
  %d = call <N x TY> @llvm.fma(<N x TY> %a, <N x TY> %b, <N x TY> %c.neg)
  ret <N x TY> %d
}

define <N x TY> @vfmsub_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfmsub_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmsub.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfmsub_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    lui a1, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v9, v9, a1
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v16, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfmsub_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmsub.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfmsub_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    lui a1, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v9, v9, a1
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v16, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfmsub_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmsub.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfmsub_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmsub.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfmsub_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmsub.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfmsub_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmsub.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %c.neg = fneg <N x TY> %c
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fma(<N x TY> %a, <N x TY> %b.splat, <N x TY> %c.neg)
  ret <N x TY> %d
}

define <N x TY> @vfnmsub_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfnmsub_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmsub.vv v8, v9, v10
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfnmsub_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    lui a0, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v10, v12, v14
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfnmsub_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmsub.vv v8, v9, v10
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfnmsub_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    lui a0, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v10, v12, v14
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfnmsub_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmsub.vv v8, v9, v10
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfnmsub_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmsub.vv v8, v10, v12
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfnmsub_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmsub.vv v8, v9, v10
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfnmsub_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmsub.vv v8, v10, v12
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %d = call <N x TY> @llvm.fma(<N x TY> %a.neg, <N x TY> %b, <N x TY> %c)
  ret <N x TY> %d
}

define <N x TY> @vfnmsub_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: vfnmsub_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmsub.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: vfnmsub_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    lui a1, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a1
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmadd.vv v16, v12, v14
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: vfnmsub_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmsub.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: vfnmsub_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    lui a1, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a1
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v16, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmadd.vv v16, v12, v14
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v16
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: vfnmsub_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmsub.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: vfnmsub_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmsub.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: vfnmsub_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmsub.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: vfnmsub_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmsub.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fma(<N x TY> %a.neg, <N x TY> %b.splat, <N x TY> %c)
  ret <N x TY> %d
}

define <N x TY> @trunc(<N x TY> %a) {
; V8F16ZVFH-LABEL: trunc:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    lui a0, %hi(.LCPI34_0)
; V8F16ZVFH-NEXT:    flh fa5, %lo(.LCPI34_0)(a0)
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfabs.v v9, v8
; V8F16ZVFH-NEXT:    vmflt.vf v0, v9, fa5
; V8F16ZVFH-NEXT:    vfcvt.rtz.x.f.v v9, v8, v0.t
; V8F16ZVFH-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V8F16ZVFH-NEXT:    vsetvli zero, zero, e16, m1, ta, mu
; V8F16ZVFH-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: trunc:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfabs.v v8, v10
; V8F16ZVFHMIN-NEXT:    lui a0, 307200
; V8F16ZVFHMIN-NEXT:    fmv.w.x fa5, a0
; V8F16ZVFHMIN-NEXT:    vmflt.vf v0, v8, fa5
; V8F16ZVFHMIN-NEXT:    vfcvt.rtz.x.f.v v8, v10, v0.t
; V8F16ZVFHMIN-NEXT:    vfcvt.f.x.v v8, v8, v0.t
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V8F16ZVFHMIN-NEXT:    vfsgnj.vv v10, v8, v10, v0.t
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: trunc:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    lui a0, %hi(.LCPI34_0)
; V6F16ZVFH-NEXT:    flh fa5, %lo(.LCPI34_0)(a0)
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfabs.v v9, v8
; V6F16ZVFH-NEXT:    vmflt.vf v0, v9, fa5
; V6F16ZVFH-NEXT:    vfcvt.rtz.x.f.v v9, v8, v0.t
; V6F16ZVFH-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V6F16ZVFH-NEXT:    vsetvli zero, zero, e16, m1, ta, mu
; V6F16ZVFH-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: trunc:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfabs.v v8, v10
; V6F16ZVFHMIN-NEXT:    lui a0, 307200
; V6F16ZVFHMIN-NEXT:    fmv.w.x fa5, a0
; V6F16ZVFHMIN-NEXT:    vmflt.vf v0, v8, fa5
; V6F16ZVFHMIN-NEXT:    vfcvt.rtz.x.f.v v8, v10, v0.t
; V6F16ZVFHMIN-NEXT:    vfcvt.f.x.v v8, v8, v0.t
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V6F16ZVFHMIN-NEXT:    vfsgnj.vv v10, v8, v10, v0.t
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: trunc:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfabs.v v9, v8
; V4F32-NEXT:    lui a0, 307200
; V4F32-NEXT:    fmv.w.x fa5, a0
; V4F32-NEXT:    vmflt.vf v0, v9, fa5
; V4F32-NEXT:    vfcvt.rtz.x.f.v v9, v8, v0.t
; V4F32-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V4F32-NEXT:    vsetvli zero, zero, e32, m1, ta, mu
; V4F32-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V4F32-NEXT:    ret
;
; V6F32-LABEL: trunc:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfabs.v v10, v8
; V6F32-NEXT:    lui a0, 307200
; V6F32-NEXT:    fmv.w.x fa5, a0
; V6F32-NEXT:    vmflt.vf v0, v10, fa5
; V6F32-NEXT:    vfcvt.rtz.x.f.v v10, v8, v0.t
; V6F32-NEXT:    vfcvt.f.x.v v10, v10, v0.t
; V6F32-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V6F32-NEXT:    vfsgnj.vv v8, v10, v8, v0.t
; V6F32-NEXT:    ret
;
; V2F64-LABEL: trunc:
; V2F64:       # %bb.0:
; V2F64-NEXT:    lui a0, %hi(.LCPI34_0)
; V2F64-NEXT:    fld fa5, %lo(.LCPI34_0)(a0)
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfabs.v v9, v8
; V2F64-NEXT:    vmflt.vf v0, v9, fa5
; V2F64-NEXT:    vfcvt.rtz.x.f.v v9, v8, v0.t
; V2F64-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V2F64-NEXT:    vsetvli zero, zero, e64, m1, ta, mu
; V2F64-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V2F64-NEXT:    ret
;
; V3F64-LABEL: trunc:
; V3F64:       # %bb.0:
; V3F64-NEXT:    lui a0, %hi(.LCPI34_0)
; V3F64-NEXT:    fld fa5, %lo(.LCPI34_0)(a0)
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfabs.v v10, v8
; V3F64-NEXT:    vmflt.vf v0, v10, fa5
; V3F64-NEXT:    vfcvt.rtz.x.f.v v10, v8, v0.t
; V3F64-NEXT:    vfcvt.f.x.v v10, v10, v0.t
; V3F64-NEXT:    vsetvli zero, zero, e64, m2, ta, mu
; V3F64-NEXT:    vfsgnj.vv v8, v10, v8, v0.t
; V3F64-NEXT:    ret
  %b = call <N x TY> @llvm.trunc(<N x TY> %a)
  ret <N x TY> %b
}

define <N x TY> @ceil(<N x TY> %a) {
; V8F16ZVFH-LABEL: ceil:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    lui a0, %hi(.LCPI35_0)
; V8F16ZVFH-NEXT:    flh fa5, %lo(.LCPI35_0)(a0)
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfabs.v v9, v8
; V8F16ZVFH-NEXT:    vmflt.vf v0, v9, fa5
; V8F16ZVFH-NEXT:    fsrmi a0, 3
; V8F16ZVFH-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V8F16ZVFH-NEXT:    fsrm a0
; V8F16ZVFH-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V8F16ZVFH-NEXT:    vsetvli zero, zero, e16, m1, ta, mu
; V8F16ZVFH-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: ceil:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfabs.v v8, v10
; V8F16ZVFHMIN-NEXT:    lui a0, 307200
; V8F16ZVFHMIN-NEXT:    fmv.w.x fa5, a0
; V8F16ZVFHMIN-NEXT:    vmflt.vf v0, v8, fa5
; V8F16ZVFHMIN-NEXT:    fsrmi a0, 3
; V8F16ZVFHMIN-NEXT:    vfcvt.x.f.v v8, v10, v0.t
; V8F16ZVFHMIN-NEXT:    fsrm a0
; V8F16ZVFHMIN-NEXT:    vfcvt.f.x.v v8, v8, v0.t
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V8F16ZVFHMIN-NEXT:    vfsgnj.vv v10, v8, v10, v0.t
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: ceil:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    lui a0, %hi(.LCPI35_0)
; V6F16ZVFH-NEXT:    flh fa5, %lo(.LCPI35_0)(a0)
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfabs.v v9, v8
; V6F16ZVFH-NEXT:    vmflt.vf v0, v9, fa5
; V6F16ZVFH-NEXT:    fsrmi a0, 3
; V6F16ZVFH-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V6F16ZVFH-NEXT:    fsrm a0
; V6F16ZVFH-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V6F16ZVFH-NEXT:    vsetvli zero, zero, e16, m1, ta, mu
; V6F16ZVFH-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: ceil:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfabs.v v8, v10
; V6F16ZVFHMIN-NEXT:    lui a0, 307200
; V6F16ZVFHMIN-NEXT:    fmv.w.x fa5, a0
; V6F16ZVFHMIN-NEXT:    vmflt.vf v0, v8, fa5
; V6F16ZVFHMIN-NEXT:    fsrmi a0, 3
; V6F16ZVFHMIN-NEXT:    vfcvt.x.f.v v8, v10, v0.t
; V6F16ZVFHMIN-NEXT:    fsrm a0
; V6F16ZVFHMIN-NEXT:    vfcvt.f.x.v v8, v8, v0.t
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V6F16ZVFHMIN-NEXT:    vfsgnj.vv v10, v8, v10, v0.t
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: ceil:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfabs.v v9, v8
; V4F32-NEXT:    lui a0, 307200
; V4F32-NEXT:    fmv.w.x fa5, a0
; V4F32-NEXT:    vmflt.vf v0, v9, fa5
; V4F32-NEXT:    fsrmi a0, 3
; V4F32-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V4F32-NEXT:    fsrm a0
; V4F32-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V4F32-NEXT:    vsetvli zero, zero, e32, m1, ta, mu
; V4F32-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V4F32-NEXT:    ret
;
; V6F32-LABEL: ceil:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfabs.v v10, v8
; V6F32-NEXT:    lui a0, 307200
; V6F32-NEXT:    fmv.w.x fa5, a0
; V6F32-NEXT:    vmflt.vf v0, v10, fa5
; V6F32-NEXT:    fsrmi a0, 3
; V6F32-NEXT:    vfcvt.x.f.v v10, v8, v0.t
; V6F32-NEXT:    fsrm a0
; V6F32-NEXT:    vfcvt.f.x.v v10, v10, v0.t
; V6F32-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V6F32-NEXT:    vfsgnj.vv v8, v10, v8, v0.t
; V6F32-NEXT:    ret
;
; V2F64-LABEL: ceil:
; V2F64:       # %bb.0:
; V2F64-NEXT:    lui a0, %hi(.LCPI35_0)
; V2F64-NEXT:    fld fa5, %lo(.LCPI35_0)(a0)
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfabs.v v9, v8
; V2F64-NEXT:    vmflt.vf v0, v9, fa5
; V2F64-NEXT:    fsrmi a0, 3
; V2F64-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V2F64-NEXT:    fsrm a0
; V2F64-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V2F64-NEXT:    vsetvli zero, zero, e64, m1, ta, mu
; V2F64-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V2F64-NEXT:    ret
;
; V3F64-LABEL: ceil:
; V3F64:       # %bb.0:
; V3F64-NEXT:    lui a0, %hi(.LCPI35_0)
; V3F64-NEXT:    fld fa5, %lo(.LCPI35_0)(a0)
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfabs.v v10, v8
; V3F64-NEXT:    vmflt.vf v0, v10, fa5
; V3F64-NEXT:    fsrmi a0, 3
; V3F64-NEXT:    vfcvt.x.f.v v10, v8, v0.t
; V3F64-NEXT:    fsrm a0
; V3F64-NEXT:    vfcvt.f.x.v v10, v10, v0.t
; V3F64-NEXT:    vsetvli zero, zero, e64, m2, ta, mu
; V3F64-NEXT:    vfsgnj.vv v8, v10, v8, v0.t
; V3F64-NEXT:    ret
  %b = call <N x TY> @llvm.ceil(<N x TY> %a)
  ret <N x TY> %b
}

define <N x TY> @floor(<N x TY> %a) {
; V8F16ZVFH-LABEL: floor:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    lui a0, %hi(.LCPI36_0)
; V8F16ZVFH-NEXT:    flh fa5, %lo(.LCPI36_0)(a0)
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfabs.v v9, v8
; V8F16ZVFH-NEXT:    vmflt.vf v0, v9, fa5
; V8F16ZVFH-NEXT:    fsrmi a0, 2
; V8F16ZVFH-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V8F16ZVFH-NEXT:    fsrm a0
; V8F16ZVFH-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V8F16ZVFH-NEXT:    vsetvli zero, zero, e16, m1, ta, mu
; V8F16ZVFH-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: floor:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfabs.v v8, v10
; V8F16ZVFHMIN-NEXT:    lui a0, 307200
; V8F16ZVFHMIN-NEXT:    fmv.w.x fa5, a0
; V8F16ZVFHMIN-NEXT:    vmflt.vf v0, v8, fa5
; V8F16ZVFHMIN-NEXT:    fsrmi a0, 2
; V8F16ZVFHMIN-NEXT:    vfcvt.x.f.v v8, v10, v0.t
; V8F16ZVFHMIN-NEXT:    fsrm a0
; V8F16ZVFHMIN-NEXT:    vfcvt.f.x.v v8, v8, v0.t
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V8F16ZVFHMIN-NEXT:    vfsgnj.vv v10, v8, v10, v0.t
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: floor:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    lui a0, %hi(.LCPI36_0)
; V6F16ZVFH-NEXT:    flh fa5, %lo(.LCPI36_0)(a0)
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfabs.v v9, v8
; V6F16ZVFH-NEXT:    vmflt.vf v0, v9, fa5
; V6F16ZVFH-NEXT:    fsrmi a0, 2
; V6F16ZVFH-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V6F16ZVFH-NEXT:    fsrm a0
; V6F16ZVFH-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V6F16ZVFH-NEXT:    vsetvli zero, zero, e16, m1, ta, mu
; V6F16ZVFH-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: floor:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfabs.v v8, v10
; V6F16ZVFHMIN-NEXT:    lui a0, 307200
; V6F16ZVFHMIN-NEXT:    fmv.w.x fa5, a0
; V6F16ZVFHMIN-NEXT:    vmflt.vf v0, v8, fa5
; V6F16ZVFHMIN-NEXT:    fsrmi a0, 2
; V6F16ZVFHMIN-NEXT:    vfcvt.x.f.v v8, v10, v0.t
; V6F16ZVFHMIN-NEXT:    fsrm a0
; V6F16ZVFHMIN-NEXT:    vfcvt.f.x.v v8, v8, v0.t
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V6F16ZVFHMIN-NEXT:    vfsgnj.vv v10, v8, v10, v0.t
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: floor:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfabs.v v9, v8
; V4F32-NEXT:    lui a0, 307200
; V4F32-NEXT:    fmv.w.x fa5, a0
; V4F32-NEXT:    vmflt.vf v0, v9, fa5
; V4F32-NEXT:    fsrmi a0, 2
; V4F32-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V4F32-NEXT:    fsrm a0
; V4F32-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V4F32-NEXT:    vsetvli zero, zero, e32, m1, ta, mu
; V4F32-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V4F32-NEXT:    ret
;
; V6F32-LABEL: floor:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfabs.v v10, v8
; V6F32-NEXT:    lui a0, 307200
; V6F32-NEXT:    fmv.w.x fa5, a0
; V6F32-NEXT:    vmflt.vf v0, v10, fa5
; V6F32-NEXT:    fsrmi a0, 2
; V6F32-NEXT:    vfcvt.x.f.v v10, v8, v0.t
; V6F32-NEXT:    fsrm a0
; V6F32-NEXT:    vfcvt.f.x.v v10, v10, v0.t
; V6F32-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V6F32-NEXT:    vfsgnj.vv v8, v10, v8, v0.t
; V6F32-NEXT:    ret
;
; V2F64-LABEL: floor:
; V2F64:       # %bb.0:
; V2F64-NEXT:    lui a0, %hi(.LCPI36_0)
; V2F64-NEXT:    fld fa5, %lo(.LCPI36_0)(a0)
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfabs.v v9, v8
; V2F64-NEXT:    vmflt.vf v0, v9, fa5
; V2F64-NEXT:    fsrmi a0, 2
; V2F64-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V2F64-NEXT:    fsrm a0
; V2F64-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V2F64-NEXT:    vsetvli zero, zero, e64, m1, ta, mu
; V2F64-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V2F64-NEXT:    ret
;
; V3F64-LABEL: floor:
; V3F64:       # %bb.0:
; V3F64-NEXT:    lui a0, %hi(.LCPI36_0)
; V3F64-NEXT:    fld fa5, %lo(.LCPI36_0)(a0)
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfabs.v v10, v8
; V3F64-NEXT:    vmflt.vf v0, v10, fa5
; V3F64-NEXT:    fsrmi a0, 2
; V3F64-NEXT:    vfcvt.x.f.v v10, v8, v0.t
; V3F64-NEXT:    fsrm a0
; V3F64-NEXT:    vfcvt.f.x.v v10, v10, v0.t
; V3F64-NEXT:    vsetvli zero, zero, e64, m2, ta, mu
; V3F64-NEXT:    vfsgnj.vv v8, v10, v8, v0.t
; V3F64-NEXT:    ret
  %b = call <N x TY> @llvm.floor(<N x TY> %a)
  ret <N x TY> %b
}

define <N x TY> @round(<N x TY> %a) {
; V8F16ZVFH-LABEL: round:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    lui a0, %hi(.LCPI37_0)
; V8F16ZVFH-NEXT:    flh fa5, %lo(.LCPI37_0)(a0)
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfabs.v v9, v8
; V8F16ZVFH-NEXT:    vmflt.vf v0, v9, fa5
; V8F16ZVFH-NEXT:    fsrmi a0, 4
; V8F16ZVFH-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V8F16ZVFH-NEXT:    fsrm a0
; V8F16ZVFH-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V8F16ZVFH-NEXT:    vsetvli zero, zero, e16, m1, ta, mu
; V8F16ZVFH-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: round:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfabs.v v8, v10
; V8F16ZVFHMIN-NEXT:    lui a0, 307200
; V8F16ZVFHMIN-NEXT:    fmv.w.x fa5, a0
; V8F16ZVFHMIN-NEXT:    vmflt.vf v0, v8, fa5
; V8F16ZVFHMIN-NEXT:    fsrmi a0, 4
; V8F16ZVFHMIN-NEXT:    vfcvt.x.f.v v8, v10, v0.t
; V8F16ZVFHMIN-NEXT:    fsrm a0
; V8F16ZVFHMIN-NEXT:    vfcvt.f.x.v v8, v8, v0.t
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V8F16ZVFHMIN-NEXT:    vfsgnj.vv v10, v8, v10, v0.t
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: round:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    lui a0, %hi(.LCPI37_0)
; V6F16ZVFH-NEXT:    flh fa5, %lo(.LCPI37_0)(a0)
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfabs.v v9, v8
; V6F16ZVFH-NEXT:    vmflt.vf v0, v9, fa5
; V6F16ZVFH-NEXT:    fsrmi a0, 4
; V6F16ZVFH-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V6F16ZVFH-NEXT:    fsrm a0
; V6F16ZVFH-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V6F16ZVFH-NEXT:    vsetvli zero, zero, e16, m1, ta, mu
; V6F16ZVFH-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: round:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfabs.v v8, v10
; V6F16ZVFHMIN-NEXT:    lui a0, 307200
; V6F16ZVFHMIN-NEXT:    fmv.w.x fa5, a0
; V6F16ZVFHMIN-NEXT:    vmflt.vf v0, v8, fa5
; V6F16ZVFHMIN-NEXT:    fsrmi a0, 4
; V6F16ZVFHMIN-NEXT:    vfcvt.x.f.v v8, v10, v0.t
; V6F16ZVFHMIN-NEXT:    fsrm a0
; V6F16ZVFHMIN-NEXT:    vfcvt.f.x.v v8, v8, v0.t
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V6F16ZVFHMIN-NEXT:    vfsgnj.vv v10, v8, v10, v0.t
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: round:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfabs.v v9, v8
; V4F32-NEXT:    lui a0, 307200
; V4F32-NEXT:    fmv.w.x fa5, a0
; V4F32-NEXT:    vmflt.vf v0, v9, fa5
; V4F32-NEXT:    fsrmi a0, 4
; V4F32-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V4F32-NEXT:    fsrm a0
; V4F32-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V4F32-NEXT:    vsetvli zero, zero, e32, m1, ta, mu
; V4F32-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V4F32-NEXT:    ret
;
; V6F32-LABEL: round:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfabs.v v10, v8
; V6F32-NEXT:    lui a0, 307200
; V6F32-NEXT:    fmv.w.x fa5, a0
; V6F32-NEXT:    vmflt.vf v0, v10, fa5
; V6F32-NEXT:    fsrmi a0, 4
; V6F32-NEXT:    vfcvt.x.f.v v10, v8, v0.t
; V6F32-NEXT:    fsrm a0
; V6F32-NEXT:    vfcvt.f.x.v v10, v10, v0.t
; V6F32-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V6F32-NEXT:    vfsgnj.vv v8, v10, v8, v0.t
; V6F32-NEXT:    ret
;
; V2F64-LABEL: round:
; V2F64:       # %bb.0:
; V2F64-NEXT:    lui a0, %hi(.LCPI37_0)
; V2F64-NEXT:    fld fa5, %lo(.LCPI37_0)(a0)
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfabs.v v9, v8
; V2F64-NEXT:    vmflt.vf v0, v9, fa5
; V2F64-NEXT:    fsrmi a0, 4
; V2F64-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V2F64-NEXT:    fsrm a0
; V2F64-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V2F64-NEXT:    vsetvli zero, zero, e64, m1, ta, mu
; V2F64-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V2F64-NEXT:    ret
;
; V3F64-LABEL: round:
; V3F64:       # %bb.0:
; V3F64-NEXT:    lui a0, %hi(.LCPI37_0)
; V3F64-NEXT:    fld fa5, %lo(.LCPI37_0)(a0)
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfabs.v v10, v8
; V3F64-NEXT:    vmflt.vf v0, v10, fa5
; V3F64-NEXT:    fsrmi a0, 4
; V3F64-NEXT:    vfcvt.x.f.v v10, v8, v0.t
; V3F64-NEXT:    fsrm a0
; V3F64-NEXT:    vfcvt.f.x.v v10, v10, v0.t
; V3F64-NEXT:    vsetvli zero, zero, e64, m2, ta, mu
; V3F64-NEXT:    vfsgnj.vv v8, v10, v8, v0.t
; V3F64-NEXT:    ret
  %b = call <N x TY> @llvm.round(<N x TY> %a)
  ret <N x TY> %b
}

define <N x TY> @rint(<N x TY> %a) {
; V8F16ZVFH-LABEL: rint:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    lui a0, %hi(.LCPI38_0)
; V8F16ZVFH-NEXT:    flh fa5, %lo(.LCPI38_0)(a0)
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfabs.v v9, v8
; V8F16ZVFH-NEXT:    vmflt.vf v0, v9, fa5
; V8F16ZVFH-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V8F16ZVFH-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V8F16ZVFH-NEXT:    vsetvli zero, zero, e16, m1, ta, mu
; V8F16ZVFH-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: rint:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfabs.v v8, v10
; V8F16ZVFHMIN-NEXT:    lui a0, 307200
; V8F16ZVFHMIN-NEXT:    fmv.w.x fa5, a0
; V8F16ZVFHMIN-NEXT:    vmflt.vf v0, v8, fa5
; V8F16ZVFHMIN-NEXT:    vfcvt.x.f.v v8, v10, v0.t
; V8F16ZVFHMIN-NEXT:    vfcvt.f.x.v v8, v8, v0.t
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V8F16ZVFHMIN-NEXT:    vfsgnj.vv v10, v8, v10, v0.t
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: rint:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    lui a0, %hi(.LCPI38_0)
; V6F16ZVFH-NEXT:    flh fa5, %lo(.LCPI38_0)(a0)
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfabs.v v9, v8
; V6F16ZVFH-NEXT:    vmflt.vf v0, v9, fa5
; V6F16ZVFH-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V6F16ZVFH-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V6F16ZVFH-NEXT:    vsetvli zero, zero, e16, m1, ta, mu
; V6F16ZVFH-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: rint:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfabs.v v8, v10
; V6F16ZVFHMIN-NEXT:    lui a0, 307200
; V6F16ZVFHMIN-NEXT:    fmv.w.x fa5, a0
; V6F16ZVFHMIN-NEXT:    vmflt.vf v0, v8, fa5
; V6F16ZVFHMIN-NEXT:    vfcvt.x.f.v v8, v10, v0.t
; V6F16ZVFHMIN-NEXT:    vfcvt.f.x.v v8, v8, v0.t
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V6F16ZVFHMIN-NEXT:    vfsgnj.vv v10, v8, v10, v0.t
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: rint:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfabs.v v9, v8
; V4F32-NEXT:    lui a0, 307200
; V4F32-NEXT:    fmv.w.x fa5, a0
; V4F32-NEXT:    vmflt.vf v0, v9, fa5
; V4F32-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V4F32-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V4F32-NEXT:    vsetvli zero, zero, e32, m1, ta, mu
; V4F32-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V4F32-NEXT:    ret
;
; V6F32-LABEL: rint:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfabs.v v10, v8
; V6F32-NEXT:    lui a0, 307200
; V6F32-NEXT:    fmv.w.x fa5, a0
; V6F32-NEXT:    vmflt.vf v0, v10, fa5
; V6F32-NEXT:    vfcvt.x.f.v v10, v8, v0.t
; V6F32-NEXT:    vfcvt.f.x.v v10, v10, v0.t
; V6F32-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V6F32-NEXT:    vfsgnj.vv v8, v10, v8, v0.t
; V6F32-NEXT:    ret
;
; V2F64-LABEL: rint:
; V2F64:       # %bb.0:
; V2F64-NEXT:    lui a0, %hi(.LCPI38_0)
; V2F64-NEXT:    fld fa5, %lo(.LCPI38_0)(a0)
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfabs.v v9, v8
; V2F64-NEXT:    vmflt.vf v0, v9, fa5
; V2F64-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V2F64-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V2F64-NEXT:    vsetvli zero, zero, e64, m1, ta, mu
; V2F64-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V2F64-NEXT:    ret
;
; V3F64-LABEL: rint:
; V3F64:       # %bb.0:
; V3F64-NEXT:    lui a0, %hi(.LCPI38_0)
; V3F64-NEXT:    fld fa5, %lo(.LCPI38_0)(a0)
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfabs.v v10, v8
; V3F64-NEXT:    vmflt.vf v0, v10, fa5
; V3F64-NEXT:    vfcvt.x.f.v v10, v8, v0.t
; V3F64-NEXT:    vfcvt.f.x.v v10, v10, v0.t
; V3F64-NEXT:    vsetvli zero, zero, e64, m2, ta, mu
; V3F64-NEXT:    vfsgnj.vv v8, v10, v8, v0.t
; V3F64-NEXT:    ret
  %b = call <N x TY> @llvm.rint(<N x TY> %a)
  ret <N x TY> %b
}

define <N x TY> @nearbyint(<N x TY> %a) {
; V8F16ZVFH-LABEL: nearbyint:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    lui a0, %hi(.LCPI39_0)
; V8F16ZVFH-NEXT:    flh fa5, %lo(.LCPI39_0)(a0)
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfabs.v v9, v8
; V8F16ZVFH-NEXT:    vmflt.vf v0, v9, fa5
; V8F16ZVFH-NEXT:    frflags a0
; V8F16ZVFH-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V8F16ZVFH-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V8F16ZVFH-NEXT:    vsetvli zero, zero, e16, m1, ta, mu
; V8F16ZVFH-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V8F16ZVFH-NEXT:    fsflags a0
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: nearbyint:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfabs.v v8, v10
; V8F16ZVFHMIN-NEXT:    lui a0, 307200
; V8F16ZVFHMIN-NEXT:    fmv.w.x fa5, a0
; V8F16ZVFHMIN-NEXT:    vmflt.vf v0, v8, fa5
; V8F16ZVFHMIN-NEXT:    frflags a0
; V8F16ZVFHMIN-NEXT:    vfcvt.x.f.v v8, v10, v0.t
; V8F16ZVFHMIN-NEXT:    vfcvt.f.x.v v8, v8, v0.t
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V8F16ZVFHMIN-NEXT:    vfsgnj.vv v10, v8, v10, v0.t
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    fsflags a0
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: nearbyint:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    lui a0, %hi(.LCPI39_0)
; V6F16ZVFH-NEXT:    flh fa5, %lo(.LCPI39_0)(a0)
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfabs.v v9, v8
; V6F16ZVFH-NEXT:    vmflt.vf v0, v9, fa5
; V6F16ZVFH-NEXT:    frflags a0
; V6F16ZVFH-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V6F16ZVFH-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V6F16ZVFH-NEXT:    vsetvli zero, zero, e16, m1, ta, mu
; V6F16ZVFH-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V6F16ZVFH-NEXT:    fsflags a0
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: nearbyint:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfabs.v v8, v10
; V6F16ZVFHMIN-NEXT:    lui a0, 307200
; V6F16ZVFHMIN-NEXT:    fmv.w.x fa5, a0
; V6F16ZVFHMIN-NEXT:    vmflt.vf v0, v8, fa5
; V6F16ZVFHMIN-NEXT:    frflags a0
; V6F16ZVFHMIN-NEXT:    vfcvt.x.f.v v8, v10, v0.t
; V6F16ZVFHMIN-NEXT:    vfcvt.f.x.v v8, v8, v0.t
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V6F16ZVFHMIN-NEXT:    vfsgnj.vv v10, v8, v10, v0.t
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    fsflags a0
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: nearbyint:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfabs.v v9, v8
; V4F32-NEXT:    lui a0, 307200
; V4F32-NEXT:    fmv.w.x fa5, a0
; V4F32-NEXT:    vmflt.vf v0, v9, fa5
; V4F32-NEXT:    frflags a0
; V4F32-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V4F32-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V4F32-NEXT:    vsetvli zero, zero, e32, m1, ta, mu
; V4F32-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V4F32-NEXT:    fsflags a0
; V4F32-NEXT:    ret
;
; V6F32-LABEL: nearbyint:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfabs.v v10, v8
; V6F32-NEXT:    lui a0, 307200
; V6F32-NEXT:    fmv.w.x fa5, a0
; V6F32-NEXT:    vmflt.vf v0, v10, fa5
; V6F32-NEXT:    frflags a0
; V6F32-NEXT:    vfcvt.x.f.v v10, v8, v0.t
; V6F32-NEXT:    vfcvt.f.x.v v10, v10, v0.t
; V6F32-NEXT:    vsetvli zero, zero, e32, m2, ta, mu
; V6F32-NEXT:    vfsgnj.vv v8, v10, v8, v0.t
; V6F32-NEXT:    fsflags a0
; V6F32-NEXT:    ret
;
; V2F64-LABEL: nearbyint:
; V2F64:       # %bb.0:
; V2F64-NEXT:    lui a0, %hi(.LCPI39_0)
; V2F64-NEXT:    fld fa5, %lo(.LCPI39_0)(a0)
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfabs.v v9, v8
; V2F64-NEXT:    vmflt.vf v0, v9, fa5
; V2F64-NEXT:    frflags a0
; V2F64-NEXT:    vfcvt.x.f.v v9, v8, v0.t
; V2F64-NEXT:    vfcvt.f.x.v v9, v9, v0.t
; V2F64-NEXT:    vsetvli zero, zero, e64, m1, ta, mu
; V2F64-NEXT:    vfsgnj.vv v8, v9, v8, v0.t
; V2F64-NEXT:    fsflags a0
; V2F64-NEXT:    ret
;
; V3F64-LABEL: nearbyint:
; V3F64:       # %bb.0:
; V3F64-NEXT:    lui a0, %hi(.LCPI39_0)
; V3F64-NEXT:    fld fa5, %lo(.LCPI39_0)(a0)
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfabs.v v10, v8
; V3F64-NEXT:    vmflt.vf v0, v10, fa5
; V3F64-NEXT:    frflags a0
; V3F64-NEXT:    vfcvt.x.f.v v10, v8, v0.t
; V3F64-NEXT:    vfcvt.f.x.v v10, v10, v0.t
; V3F64-NEXT:    vsetvli zero, zero, e64, m2, ta, mu
; V3F64-NEXT:    vfsgnj.vv v8, v10, v8, v0.t
; V3F64-NEXT:    fsflags a0
; V3F64-NEXT:    ret
  %b = call <N x TY> @llvm.nearbyint(<N x TY> %a)
  ret <N x TY> %b
}

define <N x TY> @fmuladd_vfmacc_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfmacc_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmacc.vv v8, v10, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfmacc_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfadd.vv v10, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfmacc_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmacc.vv v8, v10, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfmacc_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfadd.vv v10, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfmacc_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmacc.vv v8, v10, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfmacc_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmacc.vv v8, v12, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfmacc_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmacc.vv v8, v10, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfmacc_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmacc.vv v8, v12, v10
; V3F64-NEXT:    ret
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %c, <N x TY> %b, <N x TY> %a)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfmacc_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfmacc_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmacc.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfmacc_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfadd.vv v10, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfmacc_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmacc.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfmacc_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfadd.vv v10, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfmacc_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmacc.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfmacc_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmacc.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfmacc_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmacc.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfmacc_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmacc.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %c, <N x TY> %b.splat, <N x TY> %a)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfnmacc_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfnmacc_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmacc.vv v8, v10, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfnmacc_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    lui a0, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v10, v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfnmacc_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmacc.vv v8, v10, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfnmacc_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    lui a0, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v10, v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfnmacc_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmacc.vv v8, v10, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfnmacc_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmacc.vv v8, v12, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfnmacc_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmacc.vv v8, v10, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfnmacc_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmacc.vv v8, v12, v10
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %c.neg = fneg <N x TY> %c
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %c.neg, <N x TY> %b, <N x TY> %a.neg)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfnmacc_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfnmacc_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmacc.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfnmacc_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    lui a1, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v9, v9, a1
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfnmacc_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmacc.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfnmacc_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    lui a1, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v9, v9, a1
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfnmacc_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmacc.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfnmacc_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmacc.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfnmacc_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmacc.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfnmacc_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmacc.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %c.neg = fneg <N x TY> %c
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %c.neg, <N x TY> %b.splat, <N x TY> %a.neg)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfmsac_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfmsac_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmsac.vv v8, v10, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfmsac_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfmsac_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmsac.vv v8, v10, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfmsac_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfmsac_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmsac.vv v8, v10, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfmsac_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmsac.vv v8, v12, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfmsac_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmsac.vv v8, v10, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfmsac_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmsac.vv v8, v12, v10
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %c, <N x TY> %b, <N x TY> %a.neg)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfmsac_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfmsac_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmsac.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfmsac_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfmsac_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmsac.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfmsac_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfmsac_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmsac.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfmsac_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmsac.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfmsac_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmsac.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfmsac_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmsac.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %c, <N x TY> %b.splat, <N x TY> %a.neg)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfnmsac_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfnmsac_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmsac.vv v8, v10, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfnmsac_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfnmsac_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmsac.vv v8, v10, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfnmsac_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfnmsac_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmsac.vv v8, v10, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfnmsac_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmsac.vv v8, v12, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfnmsac_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmsac.vv v8, v10, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfnmsac_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmsac.vv v8, v12, v10
; V3F64-NEXT:    ret
  %c.neg = fneg <N x TY> %c
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %c.neg, <N x TY> %b, <N x TY> %a)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfnmsac_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfnmsac_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmsac.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfnmsac_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfnmsac_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmsac.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfnmsac_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v9, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfnmsac_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmsac.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfnmsac_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmsac.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfnmsac_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmsac.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfnmsac_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmsac.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %c.neg = fneg <N x TY> %c
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %c.neg, <N x TY> %b.splat, <N x TY> %a)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfmadd_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfmadd_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmadd.vv v8, v9, v10
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfmadd_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v8, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v11, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v8, v11
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfadd.vv v10, v8, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfmadd_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmadd.vv v8, v9, v10
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfmadd_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v8, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v11, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v8, v11
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfadd.vv v10, v8, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfmadd_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmadd.vv v8, v9, v10
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfmadd_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmadd.vv v8, v10, v12
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfmadd_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmadd.vv v8, v9, v10
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfmadd_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmadd.vv v8, v10, v12
; V3F64-NEXT:    ret
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %a, <N x TY> %b, <N x TY> %c)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfmadd_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfmadd_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmadd.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfmadd_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfadd.vv v10, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfmadd_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmadd.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfmadd_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfadd.vv v10, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfmadd_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmadd.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfmadd_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmadd.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfmadd_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmadd.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfmadd_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmadd.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %a, <N x TY> %b.splat, <N x TY> %c)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfnmadd_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfnmadd_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmadd.vv v8, v9, v10
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfnmadd_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    lui a0, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v8, v12, v14
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v11, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v8, v11
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v8, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfnmadd_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmadd.vv v8, v9, v10
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfnmadd_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    lui a0, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v8, v12, v14
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v11, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v8, v11
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v8, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfnmadd_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmadd.vv v8, v9, v10
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfnmadd_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmadd.vv v8, v10, v12
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfnmadd_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmadd.vv v8, v9, v10
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfnmadd_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmadd.vv v8, v10, v12
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %c.neg = fneg <N x TY> %c
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %a.neg, <N x TY> %b, <N x TY> %c.neg)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfnmadd_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfnmadd_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmadd.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfnmadd_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    lui a1, 8
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a1
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfnmadd_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmadd.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfnmadd_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    lui a1, 8
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vxor.vx v8, v8, a1
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfnmadd_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmadd.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfnmadd_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmadd.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfnmadd_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmadd.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfnmadd_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmadd.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %c.neg = fneg <N x TY> %c
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %a.neg, <N x TY> %b.splat, <N x TY> %c.neg)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfmsub_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfmsub_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmsub.vv v8, v9, v10
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfmsub_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v8, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v11, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v8, v11
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v8, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfmsub_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmsub.vv v8, v9, v10
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfmsub_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v8, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v11, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v8, v11
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v8, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfmsub_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmsub.vv v8, v9, v10
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfmsub_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmsub.vv v8, v10, v12
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfmsub_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmsub.vv v8, v9, v10
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfmsub_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmsub.vv v8, v10, v12
; V3F64-NEXT:    ret
  %c.neg = fneg <N x TY> %c
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %a, <N x TY> %b, <N x TY> %c.neg)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfmsub_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfmsub_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfmsub.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfmsub_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v10, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfmsub_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfmsub.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfmsub_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v10, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfmsub_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfmsub.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfmsub_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfmsub.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfmsub_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfmsub.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfmsub_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfmsub.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %c.neg = fneg <N x TY> %c
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %a, <N x TY> %b.splat, <N x TY> %c.neg)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfnmsub_vv(<N x TY> %a, <N x TY> %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfnmsub_vv:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmsub.vv v8, v9, v10
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfnmsub_vv:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v8, v14, v12
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v11, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v8, v11
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v12, v8
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfnmsub_vv:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmsub.vv v8, v9, v10
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfnmsub_vv:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v8, v14, v12
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v11, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v8, v11
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v12, v8
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfnmsub_vv:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmsub.vv v8, v9, v10
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfnmsub_vv:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmsub.vv v8, v10, v12
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfnmsub_vv:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmsub.vv v8, v9, v10
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfnmsub_vv:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmsub.vv v8, v10, v12
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %a.neg, <N x TY> %b, <N x TY> %c)
  ret <N x TY> %d
}

define <N x TY> @fmuladd_vfnmsub_vf(<N x TY> %a, TY %b, <N x TY> %c) {
; V8F16ZVFH-LABEL: fmuladd_vfnmsub_vf:
; V8F16ZVFH:       # %bb.0:
; V8F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFH-NEXT:    vfnmsub.vf v8, fa0, v9
; V8F16ZVFH-NEXT:    ret
;
; V8F16ZVFHMIN-LABEL: fmuladd_vfnmsub_vf:
; V8F16ZVFHMIN:       # %bb.0:
; V8F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V8F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V8F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V8F16ZVFHMIN-NEXT:    vfsub.vv v10, v12, v10
; V8F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V8F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V8F16ZVFHMIN-NEXT:    ret
;
; V6F16ZVFH-LABEL: fmuladd_vfnmsub_vf:
; V6F16ZVFH:       # %bb.0:
; V6F16ZVFH-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFH-NEXT:    vfnmsub.vf v8, fa0, v9
; V6F16ZVFH-NEXT:    ret
;
; V6F16ZVFHMIN-LABEL: fmuladd_vfnmsub_vf:
; V6F16ZVFHMIN:       # %bb.0:
; V6F16ZVFHMIN-NEXT:    fmv.x.w a0, fa0
; V6F16ZVFHMIN-NEXT:    vsetivli zero, 8, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vmv.v.x v10, a0
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v14, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfmul.vv v10, v12, v14
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v10, v8
; V6F16ZVFHMIN-NEXT:    vfwcvt.f.f.v v12, v9
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e32, m2, ta, ma
; V6F16ZVFHMIN-NEXT:    vfsub.vv v10, v12, v10
; V6F16ZVFHMIN-NEXT:    vsetvli zero, zero, e16, m1, ta, ma
; V6F16ZVFHMIN-NEXT:    vfncvt.f.f.w v8, v10
; V6F16ZVFHMIN-NEXT:    ret
;
; V4F32-LABEL: fmuladd_vfnmsub_vf:
; V4F32:       # %bb.0:
; V4F32-NEXT:    vsetivli zero, 4, e32, m1, ta, ma
; V4F32-NEXT:    vfnmsub.vf v8, fa0, v9
; V4F32-NEXT:    ret
;
; V6F32-LABEL: fmuladd_vfnmsub_vf:
; V6F32:       # %bb.0:
; V6F32-NEXT:    vsetivli zero, 8, e32, m2, ta, ma
; V6F32-NEXT:    vfnmsub.vf v8, fa0, v10
; V6F32-NEXT:    ret
;
; V2F64-LABEL: fmuladd_vfnmsub_vf:
; V2F64:       # %bb.0:
; V2F64-NEXT:    vsetivli zero, 2, e64, m1, ta, ma
; V2F64-NEXT:    vfnmsub.vf v8, fa0, v9
; V2F64-NEXT:    ret
;
; V3F64-LABEL: fmuladd_vfnmsub_vf:
; V3F64:       # %bb.0:
; V3F64-NEXT:    vsetivli zero, 4, e64, m2, ta, ma
; V3F64-NEXT:    vfnmsub.vf v8, fa0, v10
; V3F64-NEXT:    ret
  %a.neg = fneg <N x TY> %a
  %b.head = insertelement <N x TY> poison, TY %b, i32 0
  %b.splat = shufflevector <N x TY> %b.head, <N x TY> poison, <N x i32> zeroinitializer
  %d = call <N x TY> @llvm.fmuladd(<N x TY> %a.neg, <N x TY> %b.splat, <N x TY> %c)
  ret <N x TY> %d
}
